{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["require","config","path","__dirname","console","log","process","gmap_url","MyMapComponent","compose","withProps","googleMapURL","loadingElement","style","height","containerElement","mapElement","withScriptjs","withGoogleMap","props","defaultZoom","center","lat","lng","venues","map","venue","index","key","id","position","location","onMouseOver","handleToggleMouse","onMouseOut","onClick","handleOpen","openHoverInfoWindow","options","maxWidth","disableAutoPan","name","marginBottom","formattedAddress","toString","alt","verticalAlign","src","categories","icon","prefix","suffix","paddingLeft","openInfoWindow","maxHeight","onCloseClick","handleClose","float","paddingRight","details","bestPhoto","className","hours","status","class","contact","phone","href","url","target","rel","paddingTop","defaultValue","price","message","Map","state","openInfoWindowMarkerID","venueID","setState","filter","getVenueDetails","then","x","handleFormData","formState","fetch","method","mode","headers","rawres","json","myJson","response","Search","handleData","this","loadSavedVenues","width","padding","React","PureComponent","query","handleChange","bind","handleSubmit","e","value","URL","params","near","search","URLSearchParams","preventDefault","inputstyle","display","flexDirection","flex","whiteSpace","color","fontWeight","borderColor","textstyle","borderWidth","textAlign","zIndex","outline","buttonstyle","onSubmit","disabled","type","onChange","placeholder","Component","Boolean","window","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6621b4c6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { compose, withProps } from \"recompose\"\nimport './App.css';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from \"react-google-maps\"\nrequire('dotenv').config({path: __dirname + \"../server/config/.env\"});\nconsole.log(process.env.NODE_ENV)\nlet gmap_url = \"https://maps.googleapis.com/maps/api/js?key=\" + process.env.REACT_APP_GOOGLEMAPS_API;\nif(!process.env.REACT_APP_GOOGLEMAPS_API){\n  gmap_url = \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\";\n}\n\nconst MyMapComponent = compose(\n  withProps({\n    googleMapURL: gmap_url,\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `100%` }} />,\n    mapElement: <div style={{ height: `100%` }} />,\n  }),\n  withScriptjs,\n  withGoogleMap\n)((props) =>\n  <GoogleMap\n    defaultZoom={10}\n    center={{lat:props.center.lat,lng:props.center.lng}}\n  >\n    {props.venues.map((venue, index) => {\n      console.log(venue);\n      return (\n        <Marker \n          key={venue.id} \n          position={{lat: venue.location.lat, lng: venue.location.lng}}\n          onMouseOver={() => props.handleToggleMouse(venue.id)}\n          onMouseOut={() => props.handleToggleMouse(\"\")}\n          onClick={() => {\n            props.handleOpen(venue.id);\n          }}\n        >\n          {props.openHoverInfoWindow === venue.id && \n          <InfoWindow options={{maxWidth: \"200\", disableAutoPan: true}}>\n            <div>\n              <h6>{venue.name}</h6>\n              <p style={{marginBottom: \"2px\"}}>{venue.location.formattedAddress.toString()}</p>\n              <div>\n                <img alt=\"\" style={{verticalAlign: \"middle\"}} src={venue.categories[\"0\"].icon.prefix + \"bg_32\" + venue.categories[\"0\"].icon.suffix}></img>\n                <span style={{verticalAlign: \"middle\", paddingLeft: \"8px\"}}>{venue.categories[\"0\"].name}</span>\n              </div>\n            </div>\n          </InfoWindow>\n          }\n          {props.openInfoWindow === venue.id && \n          <InfoWindow options={{maxWidth: \"320\", maxHeight: \"500\"}} onCloseClick={() => props.handleClose()}>\n            <div>\n              <div>\n                <img alt=\"\" style={{float: \"left\", paddingRight: \"8px\"}} src={venue.details.venue.bestPhoto.prefix + \"100x100\" + venue.details.venue.bestPhoto.suffix}></img>\n                <div>\n                  <h6 style={{paddingLeft: \"8px\"}}>{venue.details.venue.name}</h6>\n                  <i style={{float: \"left\", paddingRight:\"5px\"}} className=\"far fa-clock\"></i>\n                  <p style={{marginBottom: \"2px\"}}>{venue.details.venue.hours.status || \"Check website\"}</p>\n                  <i style={{float: \"left\", paddingRight:\"5px\"}} class=\"fas fa-phone\"></i>\n                  <p style={{marginBottom: \"2px\"}}>{venue.details.venue.contact.phone || \"Check website\"}</p>\n                  <i style={{paddingRight: \"5px\"}}className=\"fas fa-globe\"></i>\n                  <a href={venue.details.venue.url} target=\"_blank\" rel=\"noopener noreferrer\">{venue.details.venue.url}</a>\n                </div>\n              </div>\n              <div style={{paddingTop: \"10px\"}}>\n                <i style={{float: \"left\", paddingRight:\"5px\"}} className=\"fas fa-map-marker\"></i>\n                <p style={{marginBottom: \"2px\"}}>{venue.details.venue.location.formattedAddress.toString()}</p>\n              </div>\n              <i style={{float: \"left\", paddingRight:\"5px\"}} class=\"fas fa-dollar-sign\"></i>\n              <p defaultValue=\"Moderate\" style={{marginBottom: \"2px\"}}>{venue.details.venue.price.message || \"Moderate\"}</p>\n            </div>\n          </InfoWindow>\n          }\n        \n        </Marker>\n      )\n      })}\n  </GoogleMap>\n)\n\nclass Map extends React.PureComponent {\n  state = {\n    venues: [],\n    openInfoWindowMarkerID: \"\",\n    openHoverInfoWindow: \"\",\n    center: {\n      lat: 40.7,\n      lng: -74\n    },\n  }\n\n  handleToggleMouse = (venueID) => {\n    if(this.state.openInfoWindowMarkerID === \"\"){  // If not clicked, open hover window\n      this.setState({\n        openHoverInfoWindow: venueID\n      });\n    }\n  }\n\n  handleOpen = (venueID) => {\n    if(this.state.openHoverInfoWindow){ // If hover is open, close it\n      this.setState({\n        openHoverInfoWindow: \"\"\n      })\n    }\n    // get venue with id to check for details \n    let result = this.state.venues.filter(venue => {\n      return venue.id === venueID\n    });\n\n    // check for details to prevent unnecessary refetching\n    if(!result[0].details){ // no venue details\n      this.getVenueDetails(venueID)\n      .then((x) => {\n        this.setState({\n          openInfoWindowMarkerID: venueID\n        });\n      });\n    }else{ // venue details already there\n      this.setState({\n        openInfoWindowMarkerID: venueID\n      });\n    }\n\n  }\n\n  handleClose = () => {\n    this.setState({\n      openInfoWindowMarkerID: \"\"\n    });\n  }\n\n  async getVenueDetails(venueID) {\n    const response = await fetch(\"http://localhost:5000/venuedetails/\" + venueID,{\n      method: 'GET',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    }).then((rawres) => {\n      return rawres.json();\n    }).then((myJson) => {\n\n      //Adds details object to venue\n      for(let x of this.state.venues){\n        console.log(this.state.venues);\n        if(x.id === venueID){\n          x['details'] = myJson.response;\n          //dirty validation. do on server side\n          if(!myJson.response.venue.price){\n            x['price'] = {message: \"Moderate\"};\n          }\n          if(!myJson.response.venue.hours){\n            x['hours'] = {status: \"Check Website\"};\n          }\n          if(!myJson.response.venue.contact.phone){\n            x['contact'] = {phone: \"Check Website\"};\n          }\n          return;\n        }\n      }\n    })\n    return response;\n  }\n\n  handleFormData = (formState) => {\n    this.setState({\n      venues: formState,\n      center: {\n        lat: formState[0].location.lat,\n        lng: formState[0].location.lng\n      }\n    });\n  }\n\n  render() {\n    const mapstyle = {\n      height: \"100vh\",\n      width: \"100vw\",\n      padding: \"4vh\",\n      paddingTop: \"9vh\",\n      position: \"relative\"\n    };\n\n    return (\n    <div>\n      <div>\n        <Search handleData={this.handleFormData} loadSavedVenues={this.loadSavedVenues}></Search>\n      </div>\n      <div class=\"map\" style={mapstyle}>\n        <MyMapComponent\n          center={this.state.center}\n          openInfoWindow={this.state.openInfoWindowMarkerID}\n          openHoverInfoWindow={this.state.openHoverInfoWindow}\n          venues={this.state.venues}\n          handleOpen={this.handleOpen}\n          handleClose={this.handleClose}\n          handleToggleMouse={this.handleToggleMouse}\n        />\n      </div>\n    </div>\n    )\n  }\n}\n\nclass Search extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      query: \"\",\n      location: \"New York, NY\"\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit(e) {\n    let url = new URL(\"http://localhost:5000/searchvenues\");\n    let params = {query:this.state.query, near:this.state.location}\n    url.search = new URLSearchParams(params).toString();\n\n    fetch(url, {\n      method: 'GET',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then((rawres) => {\n      return rawres.json();\n    }).then((venues) => {\n      //let venues = myJson.response.groups[0].items;\n      this.props.handleData(venues);\n    });\n    e.preventDefault();\n  }\n\n  render() {\n    const formstyle = {\n      paddingLeft: \"4vh\",\n      paddingTop: \"2vh\",\n      position: \"relative\",\n      borderColor: \"#000000\"\n    };\n    const inputstyle = {\n      float: \"left\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      flex: \"1\",\n      position: \"relative\",\n      width: \"50%\",\n      whiteSpace: \"nowrap\",\n      color: \"#000000\",\n      fontWeight: \"500\",\n      borderColor: \"#000000\"\n    };\n    const textstyle = {\n      color: \"#000000\",\n      borderColor: \"#000000\",\n      borderWidth: \"1px\",\n      textAlign: \"center\",\n      zIndex: \"1\",\n      outline: \"none\"\n    };\n    const buttonstyle = {\n      color: \"#000000\",\n      borderColor: \"#000000\",\n      borderWidth: \"1px\",\n      textAlign: \"center\",\n      zIndex: \"1\",\n      outline: \"none\"\n    };\n\n    return (\n      <div class=\"input\" style={formstyle}>\n        <div class=\"searchdiv\">\n          <form style={inputstyle} onSubmit={this.handleSubmit}>\n            <span style={inputstyle} class=\"fa-border\">Venue Locator</span>\n            <button style={buttonstyle} className=\"fas fa-search fa-border\" disabled></button>\n            <input type=\"text\" style={textstyle} name=\"query\" onChange={this.handleChange} placeholder=\"Search\"></input>\n            <button style={buttonstyle} className=\"fas fa-map-marker-alt fa-border\" disabled></button>\n            <input style={textstyle} type=\"text\" name=\"location\" onChange={this.handleChange} placeholder=\"New York, NY\"></input>\n            <button style={buttonstyle} type=\"submit\"><i className=\"fas fa-arrow-right\"></i></button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default Map;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}